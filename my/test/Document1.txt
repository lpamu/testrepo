package com.beingjavaguys.core;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;

public class ComparableTestClass {
 public static void main(String args[]) {

  Employee employee1 = new Employee(2, "Zinger");
  Employee employee2 = new Employee(4, "Jolly");
  Employee employee3 = new Employee(1, "Sanorita");
  Employee employee4 = new Employee(3, "Andrew");

  ArrayList<Employee> empList = new ArrayList<Employee>();
  empList.add(employee1);
  empList.add(employee2);
  empList.add(employee3);
  empList.add(employee4);

  System.out.println("EmpList elemnets befor sorting by id :");
  for (int i = 0; i < empList.size(); i++) {
   System.out.println("EmpId: " + empList.get(i).getEmpId()
     + " | EmpName: " + empList.get(i).getEmpName());
  }

  Collections.sort(empList);

  System.out.println("EmpList elemnets after sorting by id :");
  for (int i = 0; i < empList.size(); i++) {
   System.out.println("EmpId: " + empList.get(i).getEmpId()
     + " | EmpName: " + empList.get(i).getEmpName());
  }

 }
 
 03.public class Employee implements Comparable<Employee> {  
 04.  
 05. private int empId;  
 06. private String empName;  
 07.  
 08. Employee(int empId, String empName) {  
 09.  this.empId = empId;  
 10.  this.empName = empName;  
 11. }  
 12.  
 13. @Override  
 14. public int compareTo(Employee emp) {  
 15.  return (this.empId < emp.empId) ? -1 : (this.empId > emp.empId) ? 1 : 0;  
 16. }  
 17.  
 18. public int getEmpId() {  
 19.  return empId;  
 20. }  
 21.  
 22. public void setEmpId(int empId) {  
 23.  this.empId = empId;  
 24. }  
 25.  
 26. public String getEmpName() {  
 27.  return empName;  
 28. }  
 29.  
 30. public void setEmpName(String empName) {  
 31.  this.empName = empName;  
 32. }  
 33.  
 34.}  

}

